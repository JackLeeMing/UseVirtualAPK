apply plugin: 'com.android.application'
apply plugin: 'com.didi.virtualapk.plugin'
android {
    compileSdkVersion 27
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.ttl.ljk.com.lpp"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
// 插件配置信息,放在文件最下面
virtualApk {
    // 插件资源表中的packageId，需要确保不同插件有不同的packageId.
    packageId = 0x70

    // 宿主工程application模块的路径，插件的构建需要依赖这个路径,我这个宿主工程和插件工程在同一级目录下,所以下面这样写
    ///Users/mac/WorkSource/Android/PluginApplication/PluginApplication/app
    targetHost = '/Users/mac/WorkSource/Android/NApplication/app'
    //默认为true，如果插件有引用宿主的类，那么这个选项可以使得插件和宿主保持混淆一致
    applyHostMapping = true
}
